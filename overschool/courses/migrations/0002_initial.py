# Generated by Django 5.2.5 on 2025-08-11 18:18

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('chats', '0002_initial'),
        ('courses', '0001_initial'),
        ('schools', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='baselesson',
            name='author',
            field=models.ForeignKey(default=1, help_text='Автор записи', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор'),
        ),
        migrations.AddField(
            model_name='baselessonblock',
            name='base_lesson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocks', to='courses.baselesson'),
        ),
        migrations.AddField(
            model_name='blockbutton',
            name='block',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buttons', to='courses.baselessonblock'),
        ),
        migrations.AddField(
            model_name='audienceblock',
            name='chips',
            field=models.ManyToManyField(to='courses.blockcards', verbose_name='Блок карточек'),
        ),
        migrations.AddField(
            model_name='comment',
            name='author',
            field=models.ForeignKey(help_text='Автор комментария', on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL, verbose_name='Автор комментария'),
        ),
        migrations.AddField(
            model_name='comment',
            name='lesson',
            field=models.ForeignKey(help_text='Урок, к которому относится комментарий', on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='courses.baselesson', verbose_name='Урок, к которому относится комментарий'),
        ),
        migrations.AddField(
            model_name='comment',
            name='parent_comment',
            field=models.ForeignKey(blank=True, help_text='Комментарий, на который дается ответ', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='courses.comment', verbose_name='Родительский комментарий'),
        ),
        migrations.AddField(
            model_name='course',
            name='author',
            field=models.ForeignKey(default=1, help_text='Автор записи', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор'),
        ),
        migrations.AddField(
            model_name='course',
            name='school',
            field=models.ForeignKey(help_text='ID школы', on_delete=django.db.models.deletion.CASCADE, related_name='course_school', to='schools.school', verbose_name='ID школы'),
        ),
        migrations.AddField(
            model_name='comment',
            name='copy_course_id',
            field=models.ForeignKey(blank=True, default=None, help_text='ID копии курса, если коммент относится к копии курса', null=True, on_delete=django.db.models.deletion.CASCADE, to='courses.course', verbose_name='ID копии курса'),
        ),
        migrations.AddField(
            model_name='courseappeals',
            name='course',
            field=models.ForeignKey(help_text='ID курса', on_delete=django.db.models.deletion.CASCADE, to='courses.course', verbose_name='ID курса'),
        ),
        migrations.AddField(
            model_name='coursecopy',
            name='course_copy_id',
            field=models.ForeignKey(help_text='ID курса копии', on_delete=django.db.models.deletion.CASCADE, to='courses.course', verbose_name='ID курса копии'),
        ),
        migrations.AddField(
            model_name='courselanding',
            name='audience',
            field=models.ForeignKey(help_text='Блок с целевой аудиторией', on_delete=django.db.models.deletion.CASCADE, related_name='audience_block', to='courses.audienceblock', verbose_name='Целевая аудитория'),
        ),
        migrations.AddField(
            model_name='courselanding',
            name='course',
            field=models.ForeignKey(help_text='ID школы', on_delete=django.db.models.deletion.CASCADE, related_name='course_school', to='courses.course', verbose_name='ID школы'),
        ),
        migrations.AddField(
            model_name='folder',
            name='school',
            field=models.ForeignKey(help_text='ID школы', on_delete=django.db.models.deletion.CASCADE, related_name='folder_school', to='schools.school', verbose_name='ID школы'),
        ),
        migrations.AddField(
            model_name='course',
            name='folder',
            field=models.ForeignKey(blank=True, help_text='ID папки', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='course_folder', to='courses.folder', verbose_name='ID папки'),
        ),
        migrations.AddField(
            model_name='groupcourseaccess',
            name='course',
            field=models.ForeignKey(help_text='Курс, к которому предоставлен доступ', on_delete=django.db.models.deletion.CASCADE, to='courses.course', verbose_name='Курс'),
        ),
        migrations.AddField(
            model_name='courselanding',
            name='header',
            field=models.ForeignKey(help_text='Верхний блок с коротким описанием курса и изображением', on_delete=django.db.models.deletion.CASCADE, related_name='header_block', to='courses.headerblock', verbose_name='Шапка лендинга'),
        ),
        migrations.AddField(
            model_name='lessonavailability',
            name='lesson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.baselesson', verbose_name='Урок/ДЗ/Тест'),
        ),
        migrations.AddField(
            model_name='lessonavailability',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_availability', to=settings.AUTH_USER_MODEL, verbose_name='Студент'),
        ),
        migrations.AddField(
            model_name='lessonenrollment',
            name='lesson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.baselesson', verbose_name='Урок/ДЗ/Тест'),
        ),
        migrations.AddField(
            model_name='courselanding',
            name='link_button',
            field=models.ForeignKey(help_text='Блок с ссылками', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='link_button', to='courses.linkbutton', verbose_name='Кнопка с ссылкой'),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(help_text='Вопрос, к которому привязан ответ', on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='courses.question', verbose_name='ID Вопроса'),
        ),
        migrations.AddField(
            model_name='section',
            name='author',
            field=models.ForeignKey(default=1, help_text='Автор записи', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор'),
        ),
        migrations.AddField(
            model_name='section',
            name='course',
            field=models.ForeignKey(help_text='ID курса раздела', on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='courses.course', verbose_name='ID курса'),
        ),
        migrations.AddField(
            model_name='baselesson',
            name='section',
            field=models.ForeignKey(help_text='ID раздела курса', on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='courses.section', verbose_name='ID раздела'),
        ),
        migrations.AddField(
            model_name='courselanding',
            name='stats',
            field=models.ForeignKey(help_text='Блок со статистикой курса', on_delete=django.db.models.deletion.CASCADE, related_name='stats_block', to='courses.statsblock', verbose_name='Статистика'),
        ),
        migrations.AddField(
            model_name='studentcourseprogress',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.course'),
        ),
        migrations.AddField(
            model_name='studentcourseprogress',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='studentsgroup',
            name='chat',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='group', to='chats.chat'),
        ),
        migrations.AddField(
            model_name='studentsgroup',
            name='course_id',
            field=models.ForeignKey(help_text='Курс, который проходит эта группа', on_delete=django.db.models.deletion.CASCADE, related_name='group_course_fk', to='courses.course', verbose_name='Курс'),
        ),
        migrations.AddField(
            model_name='studentsgroup',
            name='students',
            field=models.ManyToManyField(blank=True, help_text='Ученики этой группы', related_name='students_group_fk', to=settings.AUTH_USER_MODEL, verbose_name='Ученики'),
        ),
        migrations.AddField(
            model_name='studentsgroup',
            name='teacher_id',
            field=models.ForeignKey(blank=True, help_text='Преподаватель, который ведёт эту группу', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teacher_group_fk', to=settings.AUTH_USER_MODEL, verbose_name='Преподаватель'),
        ),
        migrations.AddField(
            model_name='lessonenrollment',
            name='student_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_enrollment', to='courses.studentsgroup', verbose_name='Группа студента'),
        ),
        migrations.AddField(
            model_name='groupcourseaccess',
            name='current_group',
            field=models.ForeignKey(help_text='Группа, для которой предоставлен доступ к курсу', on_delete=django.db.models.deletion.CASCADE, related_name='current_group_accesses', to='courses.studentsgroup', verbose_name='Текущая группа'),
        ),
        migrations.AddField(
            model_name='groupcourseaccess',
            name='group',
            field=models.ForeignKey(help_text='Группа на курсе, на которую предоставлен доступ', on_delete=django.db.models.deletion.CASCADE, related_name='group_accesses', to='courses.studentsgroup', verbose_name='Новая группа на курсе'),
        ),
        migrations.AddField(
            model_name='studentsgroup',
            name='group_settings',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='students_group_settings_fk', to='courses.studentsgroupsettings'),
        ),
        migrations.AddField(
            model_name='studentshistory',
            name='students_group',
            field=models.ForeignKey(help_text='Группа студентов', on_delete=django.db.models.deletion.CASCADE, related_name='students_group', to='courses.studentsgroup', verbose_name='Группа студентов'),
        ),
        migrations.AddField(
            model_name='studentshistory',
            name='user',
            field=models.ForeignKey(help_text='ID ученика', on_delete=django.db.models.deletion.CASCADE, related_name='user_history', to=settings.AUTH_USER_MODEL, verbose_name='ID ученика'),
        ),
        migrations.AddField(
            model_name='studentstableinfo',
            name='author',
            field=models.ForeignKey(default=1, help_text='Автор записи', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор'),
        ),
        migrations.AddField(
            model_name='studentstableinfo',
            name='school',
            field=models.ForeignKey(help_text='К какой школе относятся таблицы', on_delete=django.db.models.deletion.CASCADE, related_name='tables', to='schools.school', verbose_name='Школа'),
        ),
        migrations.AddField(
            model_name='trainingduration',
            name='students_group',
            field=models.ForeignKey(help_text='Группа студентов', on_delete=django.db.models.deletion.CASCADE, to='courses.studentsgroup', verbose_name='Группа студентов'),
        ),
        migrations.AddField(
            model_name='trainingduration',
            name='user',
            field=models.ForeignKey(help_text='ID ученика', on_delete=django.db.models.deletion.CASCADE, related_name='training_duration', to=settings.AUTH_USER_MODEL, verbose_name='ID ученика'),
        ),
        migrations.AddField(
            model_name='courselanding',
            name='training_program',
            field=models.ForeignKey(help_text='Блок с программой обучения курса', on_delete=django.db.models.deletion.CASCADE, related_name='training_program_block', to='courses.trainingprogram', verbose_name='Программа обучения'),
        ),
        migrations.AddField(
            model_name='trainingpurpose',
            name='chips',
            field=models.ManyToManyField(to='courses.blockcards', verbose_name='Блок карточек'),
        ),
        migrations.AddField(
            model_name='courselanding',
            name='training_purpose',
            field=models.ForeignKey(help_text='Блок с целью обучения курсу', on_delete=django.db.models.deletion.CASCADE, related_name='training_purpose_block', to='courses.trainingpurpose', verbose_name='Цель обучения'),
        ),
        migrations.AddField(
            model_name='userhomework',
            name='copy_course_id',
            field=models.ForeignKey(blank=True, default=None, help_text='ID копии курса, если домашка относится к копии курса', null=True, on_delete=django.db.models.deletion.CASCADE, to='courses.course', verbose_name='ID копии курса'),
        ),
        migrations.AddField(
            model_name='userhomework',
            name='teacher',
            field=models.ForeignKey(blank=True, help_text='Учитель, который проверял домашнюю работы', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teacher_homeworks', to=settings.AUTH_USER_MODEL, verbose_name='ID учителя'),
        ),
        migrations.AddField(
            model_name='userhomework',
            name='user',
            field=models.ForeignKey(help_text='ID ученика, выполнившего домашнюю работу', on_delete=django.db.models.deletion.CASCADE, related_name='user_homeworks', to=settings.AUTH_USER_MODEL, verbose_name='ID ученика'),
        ),
        migrations.AddField(
            model_name='userhomeworkcheck',
            name='author',
            field=models.ForeignKey(default=1, help_text='Автор записи', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор'),
        ),
        migrations.AddField(
            model_name='userhomeworkcheck',
            name='user_homework',
            field=models.ForeignKey(help_text='ID домашнего задания, ответ на который прислали', on_delete=django.db.models.deletion.CASCADE, related_name='user_homework_checks', to='courses.userhomework', verbose_name='ID домашнего задания студента'),
        ),
        migrations.AddField(
            model_name='userprogresslogs',
            name='lesson',
            field=models.ForeignKey(blank=True, help_text='ID урока/дз/теста, который был завершен', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_progresses', to='courses.baselesson', verbose_name='ID урока/дз/теста'),
        ),
        migrations.AddField(
            model_name='userprogresslogs',
            name='user',
            field=models.ForeignKey(help_text='ID ученика по прогрессу на курсе', on_delete=django.db.models.deletion.CASCADE, related_name='user_progresses', to=settings.AUTH_USER_MODEL, verbose_name='ID ученика'),
        ),
        migrations.AddField(
            model_name='usertest',
            name='user',
            field=models.ForeignKey(default=1, help_text='Уникальный идентификатор пользователя', on_delete=django.db.models.deletion.CASCADE, related_name='users', to=settings.AUTH_USER_MODEL, verbose_name='ID пользователя'),
        ),
        migrations.AddField(
            model_name='userhomework',
            name='homework',
            field=models.ForeignKey(help_text='ID домашнего задания, ответ на который прислали', on_delete=django.db.models.deletion.CASCADE, related_name='user_homeworks', to='courses.homework', verbose_name='ID домашнего задания'),
        ),
        migrations.AddField(
            model_name='usertest',
            name='test',
            field=models.ForeignKey(help_text='Уникальный идентификатор теста', on_delete=django.db.models.deletion.CASCADE, related_name='tests', to='courses.sectiontest', verbose_name='ID теста'),
        ),
        migrations.AddField(
            model_name='randomtesttests',
            name='target_test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='target_test', to='courses.sectiontest'),
        ),
        migrations.AddField(
            model_name='randomtesttests',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test', to='courses.sectiontest'),
        ),
        migrations.AddField(
            model_name='question',
            name='test',
            field=models.ForeignKey(help_text='Тест, к которому привязан вопрос', on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='courses.sectiontest', verbose_name='Тест'),
        ),
        migrations.AddIndex(
            model_name='baselessonblock',
            index=models.Index(fields=['base_lesson'], name='courses_bas_base_le_d5ca4b_idx'),
        ),
        migrations.AddIndex(
            model_name='baselessonblock',
            index=models.Index(fields=['description'], name='courses_bas_descrip_dac258_idx'),
        ),
        migrations.AddIndex(
            model_name='baselessonblock',
            index=models.Index(fields=['code'], name='courses_bas_code_4465f2_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['lesson'], name='courses_com_lesson__7f9bf7_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['author'], name='courses_com_author__fe6bab_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['created_at'], name='courses_com_created_482a57_idx'),
        ),
        migrations.AddIndex(
            model_name='courseappeals',
            index=models.Index(fields=['course'], name='courses_cou_course__0f0996_idx'),
        ),
        migrations.AddIndex(
            model_name='courseappeals',
            index=models.Index(fields=['email'], name='courses_cou_email_1921e8_idx'),
        ),
        migrations.AddIndex(
            model_name='courseappeals',
            index=models.Index(fields=['is_read'], name='courses_cou_is_read_98e356_idx'),
        ),
        migrations.AddIndex(
            model_name='folder',
            index=models.Index(fields=['school'], name='courses_fol_school__fd3919_idx'),
        ),
        migrations.AddIndex(
            model_name='folder',
            index=models.Index(fields=['name'], name='courses_fol_name_cb643e_idx'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['search_vector'], name='courses_cou_search__cca690_idx'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['school'], name='courses_cou_school__4249da_idx'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['name'], name='courses_cou_name_eb4cc3_idx'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['is_catalog'], name='courses_cou_is_cata_47580d_idx'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['public'], name='courses_cou_public_937d97_idx'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['folder'], name='courses_cou_folder__0965ab_idx'),
        ),
        migrations.AddConstraint(
            model_name='course',
            constraint=models.UniqueConstraint(fields=('school', 'order'), name='unique_school_course_order'),
        ),
        migrations.AddIndex(
            model_name='lessonavailability',
            index=models.Index(fields=['student'], name='courses_les_student_8a0ab3_idx'),
        ),
        migrations.AddIndex(
            model_name='lessonavailability',
            index=models.Index(fields=['lesson'], name='courses_les_lesson__7122ba_idx'),
        ),
        migrations.AddIndex(
            model_name='lessonavailability',
            index=models.Index(fields=['available'], name='courses_les_availab_f58ed5_idx'),
        ),
        migrations.AddIndex(
            model_name='lessonavailability',
            index=models.Index(fields=['visible_timer'], name='courses_les_visible_a39ce6_idx'),
        ),
        migrations.AddIndex(
            model_name='section',
            index=models.Index(fields=['course'], name='courses_sec_course__46056e_idx'),
        ),
        migrations.AddIndex(
            model_name='section',
            index=models.Index(fields=['name'], name='courses_sec_name_26dca0_idx'),
        ),
        migrations.AddIndex(
            model_name='baselesson',
            index=models.Index(fields=['section'], name='courses_bas_section_920458_idx'),
        ),
        migrations.AddIndex(
            model_name='baselesson',
            index=models.Index(fields=['name'], name='courses_bas_name_9e1c43_idx'),
        ),
        migrations.AddIndex(
            model_name='studentcourseprogress',
            index=models.Index(fields=['student', 'course'], name='courses_stu_student_f3e6b2_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='studentcourseprogress',
            unique_together={('student', 'course')},
        ),
        migrations.AddIndex(
            model_name='lessonenrollment',
            index=models.Index(fields=['student_group'], name='courses_les_student_9530d4_idx'),
        ),
        migrations.AddIndex(
            model_name='lessonenrollment',
            index=models.Index(fields=['lesson'], name='courses_les_lesson__918c3e_idx'),
        ),
        migrations.AddIndex(
            model_name='groupcourseaccess',
            index=models.Index(fields=['current_group'], name='courses_gro_current_a593ae_idx'),
        ),
        migrations.AddIndex(
            model_name='groupcourseaccess',
            index=models.Index(fields=['course'], name='courses_gro_course__911634_idx'),
        ),
        migrations.AddIndex(
            model_name='groupcourseaccess',
            index=models.Index(fields=['group'], name='courses_gro_group_i_5bed5c_idx'),
        ),
        migrations.AddIndex(
            model_name='studentsgroup',
            index=models.Index(fields=['name'], name='courses_stu_name_dae187_idx'),
        ),
        migrations.AddIndex(
            model_name='studentsgroup',
            index=models.Index(fields=['course_id'], name='courses_stu_course__b6a034_idx'),
        ),
        migrations.AddIndex(
            model_name='studentsgroup',
            index=models.Index(fields=['teacher_id'], name='courses_stu_teacher_f8cb3b_idx'),
        ),
        migrations.AddIndex(
            model_name='studentsgroup',
            index=models.Index(fields=['group_id'], name='courses_stu_group_i_853aa4_idx'),
        ),
        migrations.AddIndex(
            model_name='studentshistory',
            index=models.Index(fields=['user'], name='courses_stu_user_id_3963d6_idx'),
        ),
        migrations.AddIndex(
            model_name='studentshistory',
            index=models.Index(fields=['students_group'], name='courses_stu_student_05c20d_idx'),
        ),
        migrations.AddIndex(
            model_name='studentshistory',
            index=models.Index(fields=['date_added'], name='courses_stu_date_ad_e75eb7_idx'),
        ),
        migrations.AddIndex(
            model_name='studentshistory',
            index=models.Index(fields=['date_removed'], name='courses_stu_date_re_dfe9f4_idx'),
        ),
        migrations.AddIndex(
            model_name='trainingduration',
            index=models.Index(fields=['user'], name='courses_tra_user_id_8efbde_idx'),
        ),
        migrations.AddIndex(
            model_name='trainingduration',
            index=models.Index(fields=['students_group'], name='courses_tra_student_b18598_idx'),
        ),
        migrations.AddIndex(
            model_name='userhomeworkcheck',
            index=models.Index(fields=['user_homework'], name='courses_use_user_ho_5c838c_idx'),
        ),
        migrations.AddIndex(
            model_name='userhomeworkcheck',
            index=models.Index(fields=['status'], name='courses_use_status_b46450_idx'),
        ),
        migrations.AddIndex(
            model_name='userhomeworkcheck',
            index=models.Index(fields=['mark'], name='courses_use_mark_f2d5be_idx'),
        ),
        migrations.AddIndex(
            model_name='userprogresslogs',
            index=models.Index(fields=['user'], name='courses_use_user_id_9fda26_idx'),
        ),
        migrations.AddIndex(
            model_name='userprogresslogs',
            index=models.Index(fields=['lesson'], name='courses_use_lesson__1799de_idx'),
        ),
        migrations.AddIndex(
            model_name='userprogresslogs',
            index=models.Index(fields=['viewed'], name='courses_use_viewed_ef5c3e_idx'),
        ),
        migrations.AddIndex(
            model_name='userprogresslogs',
            index=models.Index(fields=['completed'], name='courses_use_complet_601c61_idx'),
        ),
        migrations.AddIndex(
            model_name='userhomework',
            index=models.Index(fields=['user'], name='courses_use_user_id_621cb2_idx'),
        ),
        migrations.AddIndex(
            model_name='userhomework',
            index=models.Index(fields=['homework'], name='courses_use_homewor_13fe54_idx'),
        ),
        migrations.AddIndex(
            model_name='userhomework',
            index=models.Index(fields=['teacher'], name='courses_use_teacher_648e13_idx'),
        ),
        migrations.AddIndex(
            model_name='userhomework',
            index=models.Index(fields=['mark'], name='courses_use_mark_7b59db_idx'),
        ),
        migrations.AddIndex(
            model_name='userhomework',
            index=models.Index(fields=['status'], name='courses_use_status_ff096b_idx'),
        ),
    ]
