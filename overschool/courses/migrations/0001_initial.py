# Generated by Django 4.0.6 on 2022-07-21 08:58

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion
import embed_video.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('created_on', models.DateTimeField(auto_now_add=True, help_text='Дата и время, когда запись была создана', verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Дата, когда запись была последний раз обновлена', verbose_name='Обновлено')),
                ('course_id', models.AutoField(editable=False, help_text='Уникальный идентификатор курса', primary_key=True, serialize=False, verbose_name='Курс ID')),
                ('name', models.CharField(help_text='Главное название курса', max_length=256, verbose_name='Название курса')),
                ('duration_days', models.IntegerField(help_text='Продолжительность курса в днях', verbose_name='Продолжительность курса')),
                ('status', models.CharField(choices=[('НО', 'Не опубликован'), ('О', 'Опубликован')], default='НО', help_text='Статус курса, отображает состояние курса (опубликован - то сть используется юзерами, не опубликован - это ещё в разработке', max_length=256, verbose_name='Статус курса')),
                ('price', models.DecimalField(decimal_places=2, help_text='Цена курса в BYN', max_digits=15, verbose_name='Цена')),
                ('description', ckeditor.fields.RichTextField(help_text='Описание курса для отображения, сохраняется в html', verbose_name='Описание')),
                ('photo', models.ImageField(help_text='Главная фотография', upload_to='images/courses/main/', verbose_name='Фотография')),
            ],
            options={
                'verbose_name': 'Курс',
                'verbose_name_plural': 'Курсы',
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('created_on', models.DateTimeField(auto_now_add=True, help_text='Дата и время, когда запись была создана', verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Дата, когда запись была последний раз обновлена', verbose_name='Обновлено')),
                ('lesson_id', models.AutoField(editable=False, help_text='Уникальный идентификатор урока', primary_key=True, serialize=False, verbose_name='ID Урока')),
                ('name', models.CharField(help_text='Название урока', max_length=256, verbose_name='Название урока')),
                ('description', models.TextField(help_text='Описание к уроку', verbose_name='Описание')),
                ('video', embed_video.fields.EmbedVideoField(help_text='Сюда всталвяем ссылку на видос с ютуба, поэтому сначала его надо загрузить туда', verbose_name='Видео')),
            ],
            options={
                'verbose_name': 'Урок',
                'verbose_name_plural': 'Уроки',
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('created_on', models.DateTimeField(auto_now_add=True, help_text='Дата и время, когда запись была создана', verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Дата, когда запись была последний раз обновлена', verbose_name='Обновлено')),
                ('section_id', models.AutoField(editable=False, help_text='Уникальный идентификатор раздела', primary_key=True, serialize=False, verbose_name='ID Раздела')),
                ('name', models.CharField(help_text='Название раздела курса', max_length=256, verbose_name='Название курса')),
            ],
            options={
                'verbose_name': 'Раздел',
                'verbose_name_plural': 'Разделы',
            },
        ),
        migrations.CreateModel(
            name='UserProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, help_text='Дата и время, когда запись была создана', verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Дата, когда запись была последний раз обновлена', verbose_name='Обновлено')),
                ('course_id', models.ForeignKey(help_text='ID курса, который сейчас проходит ученик', on_delete=django.db.models.deletion.CASCADE, related_name='user_progress_course_id_fk', to='courses.course', verbose_name='ID курса')),
                ('lesson_id', models.ForeignKey(help_text='ID курса, на котором сейчас находится ученик, если None значит,урок был удалён, либо ученик только начал', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_progress_lesson_id_fk', to='courses.lesson', verbose_name='ID урока')),
            ],
            options={
                'verbose_name': 'Прогресс юзера',
                'verbose_name_plural': 'Прогрессы юзеров',
            },
        ),
    ]
