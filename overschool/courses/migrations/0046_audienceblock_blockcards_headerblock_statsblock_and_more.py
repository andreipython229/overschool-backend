# Generated by Django 4.1.1 on 2024-06-17 12:09

import ckeditor.fields
import common_services.services.file_validation
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("courses", "0045_remove_courselanding_audience_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="AudienceBlock",
            fields=[
                (
                    "is_visible",
                    models.BooleanField(
                        default=True,
                        help_text="Видимость в лендинге курса",
                        verbose_name="Отображение блока",
                    ),
                ),
                (
                    "position",
                    models.IntegerField(
                        help_text="Номер следования в столбце блоков",
                        verbose_name="Позиция в порядке следования блоков",
                    ),
                ),
                (
                    "can_up",
                    models.BooleanField(
                        help_text="Упирается ли блок в верхний край списка",
                        verbose_name="Можно сместить блок вверх",
                    ),
                ),
                (
                    "can_down",
                    models.BooleanField(
                        help_text="Упирается ли блок в нижний край списка",
                        verbose_name="Можно сместить блок вниз",
                    ),
                ),
                (
                    "id",
                    models.AutoField(
                        editable=False,
                        help_text="Уникальный идентификатор блока целевая аудитория курса",
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    ckeditor.fields.RichTextField(
                        blank=True,
                        help_text="Описание блока",
                        max_length=256,
                        null=True,
                        verbose_name="Описание блока",
                    ),
                ),
            ],
            options={
                "verbose_name": "Блок с целевой аудиторией",
                "verbose_name_plural": "Блоки с целевой аудиторией",
            },
        ),
        migrations.CreateModel(
            name="BlockCards",
            fields=[
                (
                    "id",
                    models.AutoField(
                        editable=False,
                        help_text="Уникальный идентификатор блока статистики курса",
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "position",
                    models.IntegerField(
                        default=0,
                        help_text="Номер следования в списке карточек",
                        verbose_name="Позиция в порядке следования карточек",
                    ),
                ),
                (
                    "photo",
                    models.ImageField(
                        blank=True,
                        help_text="Фотография для карточки",
                        max_length=300,
                        null=True,
                        upload_to=common_services.services.file_validation.TruncateFileName(
                            300
                        ),
                        validators=[
                            common_services.services.file_validation.limit_image_size
                        ],
                        verbose_name="Фотография",
                    ),
                ),
                (
                    "title",
                    ckeditor.fields.RichTextField(
                        blank=True,
                        help_text="Название карточки",
                        max_length=256,
                        null=True,
                        verbose_name="Название карточки",
                    ),
                ),
                (
                    "description",
                    ckeditor.fields.RichTextField(
                        blank=True,
                        help_text="Описание карточки",
                        max_length=256,
                        null=True,
                        verbose_name="Описание карточки",
                    ),
                ),
            ],
            options={
                "verbose_name": "Карточка блока",
                "verbose_name_plural": "Карточки блока",
            },
        ),
        migrations.CreateModel(
            name="HeaderBlock",
            fields=[
                (
                    "is_visible",
                    models.BooleanField(
                        default=True,
                        help_text="Видимость в лендинге курса",
                        verbose_name="Отображение блока",
                    ),
                ),
                (
                    "position",
                    models.IntegerField(
                        help_text="Номер следования в столбце блоков",
                        verbose_name="Позиция в порядке следования блоков",
                    ),
                ),
                (
                    "can_up",
                    models.BooleanField(
                        help_text="Упирается ли блок в верхний край списка",
                        verbose_name="Можно сместить блок вверх",
                    ),
                ),
                (
                    "can_down",
                    models.BooleanField(
                        help_text="Упирается ли блок в нижний край списка",
                        verbose_name="Можно сместить блок вниз",
                    ),
                ),
                (
                    "id",
                    models.AutoField(
                        editable=False,
                        help_text="Уникальный идентификатор блока шапки курса",
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Блок с шапкой",
                "verbose_name_plural": "Блоки с шапкой",
            },
        ),
        migrations.CreateModel(
            name="StatsBlock",
            fields=[
                (
                    "is_visible",
                    models.BooleanField(
                        default=True,
                        help_text="Видимость в лендинге курса",
                        verbose_name="Отображение блока",
                    ),
                ),
                (
                    "position",
                    models.IntegerField(
                        help_text="Номер следования в столбце блоков",
                        verbose_name="Позиция в порядке следования блоков",
                    ),
                ),
                (
                    "can_up",
                    models.BooleanField(
                        help_text="Упирается ли блок в верхний край списка",
                        verbose_name="Можно сместить блок вверх",
                    ),
                ),
                (
                    "can_down",
                    models.BooleanField(
                        help_text="Упирается ли блок в нижний край списка",
                        verbose_name="Можно сместить блок вниз",
                    ),
                ),
                (
                    "id",
                    models.AutoField(
                        editable=False,
                        help_text="Уникальный идентификатор блока статистики курса",
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Блок со статистикой",
                "verbose_name_plural": "Блоки со статистикой",
            },
        ),
        migrations.CreateModel(
            name="TrainingProgram",
            fields=[
                (
                    "is_visible",
                    models.BooleanField(
                        default=True,
                        help_text="Видимость в лендинге курса",
                        verbose_name="Отображение блока",
                    ),
                ),
                (
                    "position",
                    models.IntegerField(
                        help_text="Номер следования в столбце блоков",
                        verbose_name="Позиция в порядке следования блоков",
                    ),
                ),
                (
                    "can_up",
                    models.BooleanField(
                        help_text="Упирается ли блок в верхний край списка",
                        verbose_name="Можно сместить блок вверх",
                    ),
                ),
                (
                    "can_down",
                    models.BooleanField(
                        help_text="Упирается ли блок в нижний край списка",
                        verbose_name="Можно сместить блок вниз",
                    ),
                ),
                (
                    "id",
                    models.AutoField(
                        editable=False,
                        help_text="Уникальный идентификатор блока программа обучения курса",
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Блок с программой обучения",
                "verbose_name_plural": "Блоки с программой обучения",
            },
        ),
        migrations.CreateModel(
            name="TrainingPurpose",
            fields=[
                (
                    "id",
                    models.AutoField(
                        editable=False,
                        help_text="Уникальный идентификатор блока цели обучения",
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    ckeditor.fields.RichTextField(
                        blank=True,
                        help_text="Описание блока",
                        max_length=256,
                        null=True,
                        verbose_name="Описание блока",
                    ),
                ),
                (
                    "chips",
                    models.ManyToManyField(
                        to="courses.blockcards", verbose_name="Блок карточек"
                    ),
                ),
            ],
            options={
                "verbose_name": "Блок с целью обучения обучения",
                "verbose_name_plural": "Блоки с целью обучения обучения",
            },
        ),
        migrations.CreateModel(
            name="CourseLanding",
            fields=[
                (
                    "id",
                    models.AutoField(
                        editable=False,
                        help_text="Уникальный идентификатор лендинга курса",
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "audience",
                    models.ForeignKey(
                        help_text="Блок с целевой аудиторией",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="audience_block",
                        to="courses.audienceblock",
                        verbose_name="Целевая аудитория",
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        help_text="ID школы",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="course_school",
                        to="courses.course",
                        verbose_name="ID школы",
                    ),
                ),
                (
                    "header",
                    models.ForeignKey(
                        help_text="Верхний блок с коротким описанием курса и изображением",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="header_block",
                        to="courses.headerblock",
                        verbose_name="Шапка лендинга",
                    ),
                ),
                (
                    "stats",
                    models.ForeignKey(
                        help_text="Блок со статистикой курса",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stats_block",
                        to="courses.statsblock",
                        verbose_name="Статистика",
                    ),
                ),
                (
                    "training_program",
                    models.ForeignKey(
                        help_text="Блок с программой обучения курса",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="training_program_block",
                        to="courses.trainingprogram",
                        verbose_name="Программа обучения",
                    ),
                ),
                (
                    "training_purpose",
                    models.ForeignKey(
                        help_text="Блок с целью обучения курсу",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="training_purpose_block",
                        to="courses.trainingpurpose",
                        verbose_name="Цель обучения",
                    ),
                ),
            ],
            options={
                "verbose_name": "Блок с лендингом курса",
                "verbose_name_plural": "Блоки с лендингом курсов",
            },
        ),
        migrations.AddField(
            model_name="audienceblock",
            name="chips",
            field=models.ManyToManyField(
                to="courses.blockcards", verbose_name="Блок карточек"
            ),
        ),
    ]
