# Generated by Django 4.1.1 on 2024-12-12 08:08

import common_services.services.file_validation
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        (
            "schools",
            "0050_remove_school_check_tariff_not_null_if_period_active_and_more",
        ),
    ]

    operations = [
        migrations.CreateModel(
            name="Box",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "icon",
                    models.ImageField(
                        blank=True,
                        help_text="Иконка коробки",
                        max_length=300,
                        null=True,
                        upload_to=common_services.services.file_validation.TruncateFileName(
                            300
                        ),
                        validators=[
                            common_services.services.file_validation.limit_image_size
                        ],
                        verbose_name="Иконка коробки",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Название коробки",
                        max_length=300,
                        verbose_name="Название коробки",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Цена"
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        help_text="Количество коробок в наборе",
                        verbose_name="Количество коробок в наборе",
                    ),
                ),
                (
                    "bonus_quantity",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Количество бонусных коробок",
                        verbose_name="Бонусные коробки",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Активировать коробку",
                        verbose_name="Статус активности",
                    ),
                ),
                (
                    "auto_deactivation_time",
                    models.DateTimeField(
                        blank=True,
                        help_text="Время авто деактивации коробки",
                        null=True,
                        verbose_name="Время авто деактивации",
                    ),
                ),
                (
                    "school",
                    models.ForeignKey(
                        help_text="ID школы",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="boxes_school",
                        to="schools.school",
                        verbose_name="ID школы",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Prize",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "icon",
                    models.ImageField(
                        blank=True,
                        help_text="Иконка приза",
                        max_length=300,
                        null=True,
                        upload_to=common_services.services.file_validation.TruncateFileName(
                            300
                        ),
                        validators=[
                            common_services.services.file_validation.limit_image_size
                        ],
                        verbose_name="Иконка приза",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Название приза",
                        max_length=300,
                        verbose_name="Название приза",
                    ),
                ),
                (
                    "drop_chance",
                    models.FloatField(
                        help_text="Шанс выпадения приза",
                        verbose_name="Шанс выпадения (%)",
                    ),
                ),
                (
                    "guaranteed_box_count",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Количество коробок для гарантированного приза",
                        null=True,
                        verbose_name="Количество коробок для гарантированного приза",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Активировать приз",
                        verbose_name="Статус активности",
                    ),
                ),
                (
                    "school",
                    models.ForeignKey(
                        help_text="ID школы",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="prizes_school",
                        to="schools.school",
                        verbose_name="ID школы",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserPrize",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "received_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Дата и время получения приза",
                        verbose_name="Дата получения",
                    ),
                ),
                (
                    "prize",
                    models.ForeignKey(
                        help_text="Приз",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_prizes",
                        to="schools.prize",
                        verbose_name="Приз",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="Пользователь",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="prizes",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Дата и время, когда запись была создана",
                        verbose_name="Создано",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Дата, когда запись была последний раз обновлена",
                        verbose_name="Обновлено",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Сумма платежа",
                        max_digits=10,
                        verbose_name="Сумма",
                    ),
                ),
                (
                    "payment_status",
                    models.CharField(
                        choices=[
                            ("pending", "В ожидании"),
                            ("completed", "Завершен"),
                            ("failed", "Неуспешен"),
                        ],
                        default="pending",
                        max_length=50,
                        verbose_name="Статус оплаты",
                    ),
                ),
                (
                    "box",
                    models.ForeignKey(
                        help_text="Коробка",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="payments",
                        to="schools.box",
                        verbose_name="Коробка",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="Пользователь",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payments",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="BoxPrize",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "count_in_box",
                    models.PositiveIntegerField(
                        verbose_name="Количество приза в коробке"
                    ),
                ),
                (
                    "box",
                    models.ForeignKey(
                        help_text="Коробка",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="prizes",
                        to="schools.box",
                        verbose_name="Коробка",
                    ),
                ),
                (
                    "prize",
                    models.ForeignKey(
                        help_text="Приз",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="boxes",
                        to="schools.prize",
                        verbose_name="Приз",
                    ),
                ),
            ],
        ),
    ]
