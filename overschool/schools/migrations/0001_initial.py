# Generated by Django 4.1.1 on 2023-10-05 11:24

import ckeditor.fields
import common_services.services.file_validation
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="PromoCode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                (
                    "discount",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MinValueValidator(1)]
                    ),
                ),
                (
                    "uses_count",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
            ],
            options={
                "verbose_name": "Промокод",
                "verbose_name_plural": "Промокоды",
            },
        ),
        migrations.CreateModel(
            name="School",
            fields=[
                ("order", models.IntegerField(blank=True, verbose_name="Порядок")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Дата и время, когда запись была создана",
                        verbose_name="Создано",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Дата, когда запись была последний раз обновлена",
                        verbose_name="Обновлено",
                    ),
                ),
                (
                    "school_id",
                    models.AutoField(
                        editable=False,
                        help_text="Уникальный идентификатор школы",
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID школы",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Название школы",
                        max_length=256,
                        unique=True,
                        verbose_name="Название",
                    ),
                ),
                (
                    "used_trial",
                    models.BooleanField(
                        default=False,
                        help_text="Флаг, указывающий, использовал ли пользователь пробный тариф",
                        verbose_name="Пробный тариф использован",
                    ),
                ),
                (
                    "purchased_tariff_end_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Дата окончания оплаченного тарифа",
                        null=True,
                        verbose_name="Окончание оплаченного тарифа",
                    ),
                ),
                (
                    "trial_end_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Дата, когда пробный период истекает",
                        null=True,
                        verbose_name="Дата окончания пробного периода",
                    ),
                ),
                (
                    "offer_url",
                    models.URLField(
                        blank=True,
                        default="",
                        null=True,
                        verbose_name="url договора оферты",
                    ),
                ),
            ],
            options={
                "verbose_name": "Школа",
                "verbose_name_plural": "Школы",
            },
        ),
        migrations.CreateModel(
            name="Tariff",
            fields=[
                (
                    "id",
                    models.AutoField(
                        editable=False,
                        help_text="Уникальный идентификатор тарифа",
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID тарифа",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("Intern", "Intern"),
                            ("Junior", "Junior"),
                            ("Middle", "Middle"),
                            ("Senior", "Senior"),
                        ],
                        default="Intern",
                        max_length=10,
                    ),
                ),
                (
                    "number_of_courses",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Количество курсов"
                    ),
                ),
                (
                    "number_of_staff",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Количество сотрудников"
                    ),
                ),
                (
                    "students_per_month",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Количество учеников в месяц",
                    ),
                ),
                (
                    "total_students",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Общее количество учеников"
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Цена"
                    ),
                ),
            ],
            options={
                "verbose_name": "Тариф",
                "verbose_name_plural": "Тарифы",
            },
        ),
        migrations.CreateModel(
            name="SchoolHeader",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Дата и время, когда запись была создана",
                        verbose_name="Создано",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Дата, когда запись была последний раз обновлена",
                        verbose_name="Обновлено",
                    ),
                ),
                (
                    "header_id",
                    models.AutoField(
                        editable=False,
                        help_text="Уникальный идентификатор шапки школы",
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID школы",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Главное название школы",
                        max_length=256,
                        unique=True,
                        verbose_name="Название школы",
                    ),
                ),
                (
                    "description",
                    ckeditor.fields.RichTextField(
                        blank=True,
                        help_text="Описание школы для отображения, сохраняется в html",
                        null=True,
                        verbose_name="Описание",
                    ),
                ),
                (
                    "logo_school",
                    models.ImageField(
                        blank=True,
                        help_text="Фотография заголовка школы",
                        null=True,
                        upload_to="",
                        validators=[
                            common_services.services.file_validation.limit_size
                        ],
                        verbose_name="Фотография",
                    ),
                ),
                (
                    "photo_background",
                    models.ImageField(
                        blank=True,
                        help_text="Фотография фона",
                        null=True,
                        upload_to="",
                        validators=[
                            common_services.services.file_validation.limit_size
                        ],
                        verbose_name="Фотография",
                    ),
                ),
                (
                    "school",
                    models.OneToOneField(
                        help_text="ID школы,которой принадлежит школа",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="header_school",
                        to="schools.school",
                        verbose_name="ID школы",
                    ),
                ),
            ],
            options={
                "verbose_name": "Шапка школы",
                "verbose_name_plural": "Шапки школы",
            },
        ),
    ]
