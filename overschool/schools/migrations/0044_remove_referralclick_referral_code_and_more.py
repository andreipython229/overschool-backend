# Generated by Django 4.1.1 on 2024-07-04 08:08

import uuid

import django.db.models.deletion
from django.db import migrations, models


def generate_unique_uuid(apps, schema_editor):
    School = apps.get_model("schools", "School")
    for school in School.objects.all():
        while True:
            new_uuid = uuid.uuid4()
            if not School.objects.filter(referral_code=new_uuid).exists():
                school.referral_code = new_uuid
                school.save()
                break


class Migration(migrations.Migration):
    dependencies = [
        ("schools", "0043_referralcode_referralclick_referral"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="referralclick",
            name="referral_code",
        ),
        migrations.DeleteModel(
            name="ReferralCode",
        ),
        migrations.AddField(
            model_name="referralclick",
            name="school",
            field=models.ForeignKey(
                default=1,
                help_text="Школа, чей реферальный код был использован",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="referral_clicks",
                to="schools.school",
                verbose_name="Школа",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="referralclick",
            name="user_agent",
            field=models.TextField(
                blank=True,
                help_text="Информация о браузере и системе пользователя",
                null=True,
                verbose_name="User Agent",
            ),
        ),
        migrations.AddField(
            model_name="school",
            name="referral_code",
            field=models.UUIDField(
                null=True,  # Allow null initially
                help_text="Уникальный реферальный код школы",
                verbose_name="Реферальный код",
            ),
        ),
        migrations.RunPython(generate_unique_uuid),
        migrations.AlterField(
            model_name="school",
            name="referral_code",
            field=models.UUIDField(
                default=uuid.uuid4,
                unique=True,
                editable=False,
                help_text="Уникальный реферальный код школы",
                verbose_name="Реферальный код",
            ),
        ),
    ]
