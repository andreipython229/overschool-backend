# Generated by Django 4.1.1 on 2023-09-26 09:10

import common_services.services.file_validation
from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
import users.managers.user


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("schools", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "id",
                    models.AutoField(
                        editable=False,
                        help_text="Уникальный идентификатор пользователя",
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID пользователя",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        unique=True,
                        verbose_name="Имя пользователя",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(default="", max_length=150, verbose_name="Имя"),
                ),
                (
                    "last_name",
                    models.CharField(
                        default="", max_length=150, verbose_name="Фамилия"
                    ),
                ),
                (
                    "patronymic",
                    models.CharField(
                        default="", max_length=150, verbose_name="Отчество"
                    ),
                ),
                (
                    "confirmation_code",
                    models.CharField(
                        blank=True,
                        max_length=4,
                        null=True,
                        verbose_name="Код подтверждения",
                    ),
                ),
                (
                    "confirmation_code_created_at",
                    models.DateTimeField(
                        blank=True,
                        default=django.utils.timezone.now,
                        null=True,
                        verbose_name="Дата создания кода подтверждения",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        help_text="Почта",
                        max_length=254,
                        null=True,
                        verbose_name="Почта",
                    ),
                ),
                (
                    "phone_number",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True,
                        help_text="Номер телефона",
                        max_length=128,
                        null=True,
                        region=None,
                        verbose_name="Номер телефона",
                    ),
                ),
                (
                    "subscription_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("is_staff", models.BooleanField(default=False, verbose_name="Админ")),
                (
                    "is_active",
                    models.BooleanField(default=False, verbose_name="Активный"),
                ),
                (
                    "is_superuser",
                    models.BooleanField(default=False, verbose_name="Superuser status"),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Дата регистрации",
                    ),
                ),
            ],
            options={
                "verbose_name": "Пользователь",
                "verbose_name_plural": "Пользователи",
            },
            managers=[
                ("objects", users.managers.user.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Documents",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("doc_name", models.CharField(max_length=100)),
                (
                    "doc",
                    models.FileField(
                        help_text="Документы ......",
                        upload_to="documents",
                        verbose_name="“Документы“",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserRole",
            fields=[],
            options={
                "verbose_name": "Роль",
                "verbose_name_plural": "Роли",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("auth.group",),
            managers=[
                ("objects", django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.CreateModel(
            name="UserGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="groups",
                        to="auth.group",
                    ),
                ),
                (
                    "school",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="groups",
                        to="schools.school",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="groups",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Дата и время, когда запись была создана",
                        verbose_name="Создано",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Дата, когда запись была последний раз обновлена",
                        verbose_name="Обновлено",
                    ),
                ),
                (
                    "profile_id",
                    models.AutoField(
                        editable=False,
                        help_text="Уникальный идентификатор профиля",
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID профиля",
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True,
                        help_text="Аватар",
                        null=True,
                        upload_to="",
                        validators=[
                            common_services.services.file_validation.limit_size
                        ],
                        verbose_name="Аватар",
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Город",
                        max_length=256,
                        null=True,
                        verbose_name="Город",
                    ),
                ),
                (
                    "sex",
                    models.CharField(
                        blank=True,
                        choices=[("М", "Мужской"), ("Ж", "Женский")],
                        default="",
                        help_text="Пол",
                        max_length=64,
                        null=True,
                        verbose_name="Пол",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        default="",
                        help_text="О себе",
                        null=True,
                        verbose_name="О себе",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        help_text="Пользователь",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Профиль",
                "verbose_name_plural": "Профили",
            },
        ),
    ]
