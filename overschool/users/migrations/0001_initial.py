# Generated by Django 5.2.5 on 2025-08-11 18:18

import common_services.services.file_validation
import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
import users.managers.user
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('schools', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserRole',
            fields=[
            ],
            options={
                'verbose_name': 'Роль',
                'verbose_name_plural': 'Роли',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('auth.group',),
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('id', models.AutoField(editable=False, help_text='Уникальный идентификатор пользователя', primary_key=True, serialize=False, verbose_name='ID пользователя')),
                ('username', models.CharField(blank=True, max_length=150, null=True, unique=True, verbose_name='Имя пользователя')),
                ('first_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Фамилия')),
                ('patronymic', models.CharField(blank=True, max_length=150, null=True, verbose_name='Отчество')),
                ('email', models.EmailField(blank=True, help_text='Почта', max_length=254, unique=True, verbose_name='Почта')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, help_text='Номер телефона', max_length=128, null=True, region=None, verbose_name='Номер телефона')),
                ('phone_set_by_manager', models.BooleanField(default=False, verbose_name='Номер телефона установлен менеджером')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Админ')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Superuser status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата регистрации')),
                ('last_login', models.DateTimeField(auto_now=True, null=True, verbose_name='Последняя активность')),
                ('shown_welcome_message', models.BooleanField(default=False, verbose_name='Приветственное сообщение OVER AI')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'indexes': [models.Index(fields=['username'], name='users_user_usernam_65d164_idx'), models.Index(fields=['email'], name='users_user_email_6f2530_idx'), models.Index(fields=['phone_number'], name='users_user_phone_n_7fe504_idx'), models.Index(fields=['last_login'], name='users_user_last_lo_5f84ec_idx'), models.Index(fields=['date_joined'], name='users_user_date_jo_064c8f_idx'), models.Index(fields=['first_name'], name='users_user_first_n_0186c7_idx'), models.Index(fields=['last_name'], name='users_user_last_na_4e2935_idx'), models.Index(fields=['patronymic'], name='users_user_patrony_bfbcdd_idx')],
            },
            managers=[
                ('objects', users.managers.user.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата и время, когда запись была создана', verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Дата, когда запись была последний раз обновлена', verbose_name='Обновлено')),
                ('name', models.CharField(blank=True, default='', help_text='Имя пользователя', max_length=100, null=True, verbose_name='Имя пользователя')),
                ('surname', models.CharField(blank=True, default='', help_text='Фамилия пользователя', max_length=100, null=True, verbose_name='Фамилия пользователя')),
                ('position', models.CharField(blank=True, default='', help_text='Должность пользователя', max_length=500, null=True, verbose_name='Должность пользователя')),
                ('content', models.TextField(blank=True, default='', help_text='Текст отзыва', null=True, verbose_name='Текст отзыва')),
                ('avatar', models.ImageField(blank=True, help_text='Аватар', max_length=300, null=True, upload_to=common_services.services.file_validation.TruncateFileName(300), validators=[common_services.services.file_validation.limit_image_size], verbose_name='Аватар')),
                ('rating', models.IntegerField(blank=True, help_text='Рейтинг от 1 до 5', null=True, verbose_name='Рейтинг от 1 до 5')),
            ],
            options={
                'verbose_name': 'Отзыв о платформе',
                'verbose_name_plural': 'Отзывы о платформе',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['name'], name='users_feedb_name_0fd01a_idx'), models.Index(fields=['rating'], name='users_feedb_rating_ce9360_idx')],
            },
        ),
        migrations.CreateModel(
            name='Tariff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Уникальное название тарифного плана', max_length=100, unique=True, verbose_name='Название тарифа')),
                ('price', models.DecimalField(decimal_places=2, default=0, help_text='Цена тарифа в рублях', max_digits=10, verbose_name='Стоимость')),
                ('is_active', models.BooleanField(default=True, help_text='Доступен ли тариф для выбора', verbose_name='Активен')),
                ('description', models.TextField(blank=True, help_text='Подробное описание тарифного плана', verbose_name='Описание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Тариф',
                'verbose_name_plural': 'Тарифы',
                'ordering': ['price'],
                'indexes': [models.Index(fields=['name'], name='tariff_name_idx'), models.Index(fields=['is_active'], name='tariff_active_idx')],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата и время, когда запись была создана', verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Дата, когда запись была последний раз обновлена', verbose_name='Обновлено')),
                ('profile_id', models.AutoField(editable=False, help_text='Уникальный идентификатор профиля', primary_key=True, serialize=False, verbose_name='ID профиля')),
                ('avatar', models.ImageField(blank=True, help_text='Аватар', max_length=300, null=True, upload_to=common_services.services.file_validation.TruncateFileName(300), validators=[common_services.services.file_validation.limit_image_size], verbose_name='Аватар')),
                ('city', models.CharField(blank=True, default='', help_text='Город', max_length=256, null=True, verbose_name='Город')),
                ('sex', models.CharField(blank=True, choices=[('М', 'Мужской'), ('Ж', 'Женский')], default='', help_text='Пол', max_length=64, null=True, verbose_name='Пол')),
                ('description', models.TextField(blank=True, default='', help_text='О себе', null=True, verbose_name='О себе')),
                ('user', models.OneToOneField(help_text='Пользователь', on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Профиль',
                'verbose_name_plural': 'Профили',
                'indexes': [models.Index(fields=['city'], name='users_profi_city_2fdd0b_idx'), models.Index(fields=['sex'], name='users_profi_sex_929eed_idx'), models.Index(fields=['user'], name='users_profi_user_id_783607_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='auth.group')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='schools.school')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Группа пользователя',
                'verbose_name_plural': 'Группы пользователей',
                'indexes': [models.Index(fields=['user'], name='users_userg_user_id_409369_idx'), models.Index(fields=['group'], name='users_userg_group_i_88ab69_idx'), models.Index(fields=['school'], name='users_userg_school__8aa69e_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserPseudonym',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pseudonym', models.CharField(blank=True, help_text='Псевдоним, используемый сотрудником в рамках школы', max_length=150, null=True, verbose_name='Псевдоним сотрудника')),
                ('school', models.ForeignKey(help_text='Школа, в которой используется псевдоним', on_delete=django.db.models.deletion.CASCADE, related_name='pseudonyms_as_school', to='schools.school', verbose_name='Школа')),
                ('user', models.ForeignKey(help_text='Пользователь, которому принадлежит псевдоним', on_delete=django.db.models.deletion.CASCADE, related_name='pseudonyms_as_user', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Псевдоним сотрудника школы',
                'verbose_name_plural': 'Псевдонимы сотрудников школы',
                'indexes': [models.Index(fields=['user'], name='users_userp_user_id_f960d3_idx'), models.Index(fields=['school'], name='users_userp_school__fdf5ee_idx'), models.Index(fields=['pseudonym'], name='users_userp_pseudon_1505d8_idx')],
                'constraints': [models.UniqueConstraint(fields=('user', 'school'), name='unique_user_school_pseudonym')],
            },
        ),
        migrations.CreateModel(
            name='UserSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscription_id', models.CharField(help_text='Идентификатор подписки', max_length=255, verbose_name='ID подписки')),
                ('expires_at', models.DateTimeField(blank=True, help_text='Дата окончания подписки', null=True, verbose_name='Дата окончания')),
                ('school', models.ForeignKey(help_text='Школа, к которой относится подписка', on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='schools.school', verbose_name='Школа')),
                ('user', models.ForeignKey(help_text='Пользователь, у которого есть подписка', on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Подписка пользователя',
                'verbose_name_plural': 'Подписки пользователей',
                'indexes': [models.Index(fields=['user'], name='users_users_user_id_91045e_idx'), models.Index(fields=['school'], name='users_users_school__9ddd3d_idx'), models.Index(fields=['expires_at'], name='users_users_expires_4b1727_idx')],
                'unique_together': {('user', 'school')},
            },
        ),
        migrations.CreateModel(
            name='UtmLabel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('utm_source', models.CharField(blank=True, max_length=150, null=True, verbose_name='Источник трафика')),
                ('utm_medium', models.CharField(blank=True, max_length=150, null=True, verbose_name='Тип трафика')),
                ('utm_campaign', models.CharField(blank=True, max_length=150, null=True, verbose_name='Кампания')),
                ('utm_content', models.CharField(blank=True, max_length=150, null=True, verbose_name='Контент ссылки')),
                ('utm_term', models.EmailField(blank=True, max_length=150, null=True, verbose_name='Идентификатор элемента рекламного объявления')),
                ('user', models.ForeignKey(help_text='Пользователь, для которого сохранены utm-метки', on_delete=django.db.models.deletion.CASCADE, related_name='utm_labels_as_user', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'utm-метка',
                'verbose_name_plural': 'utm-метки',
                'indexes': [models.Index(fields=['user'], name='users_utmla_user_id_f43a29_idx'), models.Index(fields=['utm_source'], name='users_utmla_utm_sou_d135af_idx'), models.Index(fields=['utm_medium'], name='users_utmla_utm_med_727ba5_idx'), models.Index(fields=['utm_campaign'], name='users_utmla_utm_cam_026cfb_idx'), models.Index(fields=['utm_content'], name='users_utmla_utm_con_33dd06_idx'), models.Index(fields=['utm_term'], name='users_utmla_utm_ter_32c26f_idx')],
            },
        ),
    ]
