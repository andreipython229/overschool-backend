# Generated by Django 4.0.6 on 2022-08-03 07:01

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.AutoField(editable=False, help_text='Уникальный идентификатор пользователя', primary_key=True, serialize=False, verbose_name='ID пользователя')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Почта')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Documents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doc_name', models.CharField(max_length=100)),
                ('doc', models.FileField(help_text='Документы ......', upload_to='documents', verbose_name='“Документы“')),
            ],
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
            ],
            options={
                'verbose_name': 'Роль',
                'verbose_name_plural': 'Роли',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('auth.group',),
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата и время, когда запись была создана', verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Дата, когда запись была последний раз обновлена', verbose_name='Обновлено')),
                ('avatar', models.ImageField(help_text='Аватар', upload_to='images/users/avatar/', verbose_name='Аватар')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, help_text='Номер телефона', max_length=128, null=True, region=None, verbose_name='Номер телефона')),
                ('city', models.CharField(blank=True, help_text='Город', max_length=256, null=True, verbose_name='Город')),
                ('sex', models.CharField(blank=True, choices=[('М', 'Мужской'), ('Ж', 'Женский')], help_text='Пол', max_length=64, null=True, verbose_name='Пол')),
                ('description', models.TextField(blank=True, help_text='О себе', null=True, verbose_name='Город')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('users.user', models.Model),
        ),
    ]
